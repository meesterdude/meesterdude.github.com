<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: feed | Russ•Works]]></title>
  <link href="http://meesterdude.github.com/categories/feed/atom.xml" rel="self"/>
  <link href="http://meesterdude.github.com/"/>
  <updated>2018-03-17T05:26:20-04:00</updated>
  <id>http://meesterdude.github.com/</id>
  <author>
    <name><![CDATA[Russell Jennings]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
    <entry>
      




<title type="html"><![CDATA[My Top ArduinoVersusEvil Videos]]></title>
<link href="http://meesterdude.github.com/entries/my-top-arduinoversusevil-videos/"/>
<updated>2018-03-09T20:57:00-05:00</updated>
<id>http://meesterdude.github.com/entries/my-top-arduinoversusevil-videos</id>

      <content type="html"><![CDATA[<p>Very knowledgeable and always entertaining, ArduinoVersusEvil is a Canadian based youtuber with extensive understanding of electrical and mechanical engineering and manufacturing. His channel is primarily taking things apart, or working on his own projects. I've watched a lot of them, so I thought I'd highlight some of my favorites!</p>

<!--more-->


<p><div class="embed-video-container"><iframe src="//www.youtube.com/embed/zIQ_AM3bnwo" allowfullscreen></iframe></div>
Inventive modernization of an air compressor</p>

<p><div class="embed-video-container"><iframe src="//www.youtube.com/embed/M3WB-EwdJnM" allowfullscreen></iframe></div>
Entertaining battle and interesting dissection of component failure</p>

<p><div class="embed-video-container"><iframe src="//www.youtube.com/embed/CG7aBul033I" allowfullscreen></iframe></div>
Testing sunglasses with UV light meter</p>

<p><div class="embed-video-container"><iframe src="//www.youtube.com/embed/0kEZl_eK8Ws" allowfullscreen></iframe></div>
How a residential pump, otherwise well made, is engineered to fail within a timeframe (18:45)</p>

<p><div class="embed-video-container"><iframe src="//www.youtube.com/embed/NPTzNJMd19A" allowfullscreen></iframe></div>
Tearing down an expensive dyson vacume cleaner and the numerous ways it can fail over time</p>

<p><div class="embed-video-container"><iframe src="//www.youtube.com/embed/O4-j4kwtu9Y" allowfullscreen></iframe></div>
"it hurts even if there's juice on it" too cute.</p>

<p><a rel="bookmark" href="http://meesterdude.github.com/entries/my-top-arduinoversusevil-videos/">&infin; Permalink</a></p>



]]></content>
    </entry>
  
    <entry>
      




<title type="html"><![CDATA[The importance of rest and reflection in memory formation]]></title>
<link href="http://meesterdude.github.com/entries/the-importance-of-rest-and-reflection-in-memory-formation/"/>
<updated>2018-02-10T05:43:00-05:00</updated>
<id>http://meesterdude.github.com/entries/the-importance-of-rest-and-reflection-in-memory-formation</id>

      <content type="html"><![CDATA[<!--more-->


<p><blockquote><p>The next results were even more impressive. The participants were asked to listen to some stories and answer questions an hour later. Without the chance to rest, they could recall just 7% of the facts in the story; with the rest, this jumped to 79% – an astronomical 11-fold increase in the information they retained. The researchers also found a similar, though less pronounced, benefit for healthy participants in each case, boosting recall between 10 and 30%.</p><footer><strong>bbc</strong> <cite><a href='http://www.bbc.com/future/story/20180208-an-effortless-way-to-strengthen-your-memory'>www.bbc.com/future/story/&hellip;</a></cite></footer></blockquote></p>

<p>Fascinating read. Introducing quiet time after learning dramatically improves retention. But while a simple thing to do, it's potentially difficult for people to do nothing for minutes on end. The article recommends 10-15 minutes, but i suspect shorter intervals would be effective as well, in the 3-7 minute range. If you're trying to digest a lot of new information, doing more frequent and shorter rests may be more realistic. As what works best is bound to vary from person to person, it's best to experiment with a stopwatch and see how long you really need.</p>

<p><a rel="bookmark" href="http://meesterdude.github.com/entries/the-importance-of-rest-and-reflection-in-memory-formation/">&infin; Permalink</a></p>



]]></content>
    </entry>
  
    <entry>
      




<title type="html"><![CDATA[The Meltdown meltdown]]></title>
<link href="http://meesterdude.github.com/entries/the-meltdown-meltdown/"/>
<updated>2018-02-08T23:35:00-05:00</updated>
<id>http://meesterdude.github.com/entries/the-meltdown-meltdown</id>

      <content type="html"><![CDATA[<!--more-->


<p><blockquote><p>The KPTI patches to mitigate Meltdown can incur massive overhead, anything from 1% to over 800%. Where you are on that spectrum depends on your syscall and page fault rates, due to the extra CPU cycle overheads, and your memory working set size, due to TLB flushing on syscalls and context switches.</p><footer><strong>brendangregg.com</strong> <cite><a href='http://www.brendangregg.com/blog/2018-02-09/kpti-kaiser-meltdown-performance.html'>www.brendangregg.com/blog/&hellip;</a></cite></footer></blockquote></p>

<p>Ouch.</p>

<p>My Virtual Machines aged 5 years overnight; the performance hit has been more than the highest estimates of 30%. But I never thought the fallout could introduce penalties as high as 800%. Crazy.</p>

<p><a rel="bookmark" href="http://meesterdude.github.com/entries/the-meltdown-meltdown/">&infin; Permalink</a></p>



]]></content>
    </entry>
  
    <entry>
      




<title type="html"><![CDATA[Google keeps its talent where it can see them]]></title>
<link href="http://meesterdude.github.com/entries/google-keeps-its-talent-where-it-can-see-them/"/>
<updated>2018-02-07T14:27:00-05:00</updated>
<id>http://meesterdude.github.com/entries/google-keeps-its-talent-where-it-can-see-them</id>

      <content type="html"><![CDATA[<!--more-->


<p><blockquote><p>Google has said that it has tested the productivity of remote teams and on-site teams and found no difference in performance.</p><footer><strong>zdnet.com</strong> <cite><a href='http://www.zdnet.com/article/no-telecommuting-allowed-why-is-google-investing-billions-of-dollars-in-office-buildings/'>www.zdnet.com/article/&hellip;</a></cite></footer></blockquote></p>

<p>This deserves to be highlighted, as many companies hesitate to embrace remote work out of fear it will impact performance. Even if its a 1:1 for google, it makes a huge impact on the quality of life its workers experience.</p>

<p><blockquote><p>Google doesn't want its engineers in local coffee shops hooking up with others from other companies and plotting a Google-killer. The more it can keep its people company men and company women -- the better.</p><footer><strong>zdnet.com</strong> <cite><a href='http://www.zdnet.com/article/no-telecommuting-allowed-why-is-google-investing-billions-of-dollars-in-office-buildings/'>www.zdnet.com/article/&hellip;</a></cite></footer></blockquote></p>

<p>The better for stockholders of Google.</p>

<p><a rel="bookmark" href="http://meesterdude.github.com/entries/google-keeps-its-talent-where-it-can-see-them/">&infin; Permalink</a></p>



]]></content>
    </entry>
  
    <entry>
      




<title type="html"><![CDATA[The most undervalued indicator for hiring great developers]]></title>
<link href="http://meesterdude.github.com/entries/the-most-undervalued-indicator-for-hiring-great-developers/"/>
<updated>2018-02-07T06:58:00-05:00</updated>
<id>http://meesterdude.github.com/entries/the-most-undervalued-indicator-for-hiring-great-developers</id>

      <content type="html"><![CDATA[<p>Hiring developers is a tough problem, and there are lots of efforts to try and measure the skill set of a candidate, but most are either entirely faulty or only paint a partial picture.</p>

<p>But there is one indicator you can use that tells you close to everything you need to know about a candidate, an indicator that most shops overlook when evaluating applicants...</p>

<!--more-->


<h1>The Best Indicator is Open Source</h1>

<h2>It means working in the open</h2>

<p>All the code written is available to see - what the developer did or did not do. The mistakes they made, they fix they applied, it's all out there to be seen by all.</p>

<h2>It means collaborating with others</h2>

<p>Either reviewing and accepting PR's or submitting them to other projects - you can gain insight to how a developer gives or responds to feedback, what they are like to disagree with or brainstorm with, and how they keep the ball rolling for work that may stall.</p>

<h2>It demonstrates engineering</h2>

<p>It means they are intimately involved in a problem space, and are working close with the tooling or technology that they see where it can be better. Or if it's an entirely new project, it shows their ability to identify a problem and properly engineer and package a solution.</p>

<h2>It reveals planning &amp; organization</h2>

<p>What features did they implement and which ones did they skip? Are github issues being managed, are PRs being reviewed? Is there any kind of documentation? is the code easy enough to reason about? these are all questions you can get insight into when looking over the Open Source work of a developer.</p>

<h2>It means they're part of the community</h2>

<p>They are giving back in some way, having benefited from the works of other open source projects, they now seek to contribute back their own effort. But it also means playing a part in a larger dialog of technology, features and tooling. It means they're able and willing to share their efforts with others and take the time to make their work available for the community. A small gesture, but one that involves a significant amount of work.</p>

<p>If you're looking to hire developers, take a closer look at what their open source contributions reveal about who they are and how they work.</p>

<p><a rel="bookmark" href="http://meesterdude.github.com/entries/the-most-undervalued-indicator-for-hiring-great-developers/">&infin; Permalink</a></p>



]]></content>
    </entry>
  
</feed>

