<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: feed | RuRu]]></title>
  <link href="http://meesterdude.github.com/categories/feed/atom.xml" rel="self"/>
  <link href="http://meesterdude.github.com/"/>
  <updated>2018-02-05T01:17:51-05:00</updated>
  <id>http://meesterdude.github.com/</id>
  <author>
    <name><![CDATA[Russell Jennings]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
    <entry>
      




<title type="html"><![CDATA[Introducing WillYou DidYou &rarr;]]></title>
<link href="/entries/introducing-willyou-didyou/"/>
<updated>2017-05-04T17:21:00-04:00</updated>
<id>http://meesterdude.github.com/entries/introducing-willyou-didyou</id>

      <content type="html"><![CDATA[<p>Launching soon, two accountabilabuddies to help you achieve your goals. Add your Email address to the list!</p>

<!--more-->


<p><a rel="bookmark" href="http://meesterdude.github.com/entries/introducing-willyou-didyou/">&infin; Permalink</a></p>


<p><a rel="post-link" href="http://willyoudidyou.com">-> Link <-</a></p>

]]></content>
    </entry>
  
    <entry>
      




<title type="html"><![CDATA[3 words that changed me]]></title>
<link href="http://meesterdude.github.com/entries/3-words-that-changed-me/"/>
<updated>2017-03-21T00:22:00-04:00</updated>
<id>http://meesterdude.github.com/entries/3-words-that-changed-me</id>

      <content type="html"><![CDATA[<p>Words I've known, but did not understand or truly appreciate.</p>

<!--more-->


<p>It's not every day that a single, common word can change who you are. At least I imagine it isn't - I admit there might be people out there who see a word like "insulator" and become sheep herders - but I don't think this is such a case.</p>

<h2>Listen</h2>

<p>What does it mean, to listen? the absence of my mouth not moving? that's a simple enough definition, and the one I had for a while. But when you dive deeper, it's more than that.</p>

<p>To listen is to be quiet - verbally, and in mind. You can't listen when you're being strategic in your head about how to prove the other person wrong.</p>

<p>To listen is to be intently curious and unbiased in what you see - no matter how much you agree or disagree. The desire to understand outweighs the desire to judge. When you have a question, it's to know more, not to allude or infer.</p>

<p>And the best listeners are not tea cups you fill up with information - but mirrors that reflect what they observe - offering room for dispute on the facts, allowing them to better understand the other party.</p>

<h2>Cherish</h2>

<p>Growing up, I never understood a particular word that gets thrown around quite a lot in daily life. Certainly a function of my upbringing and experiences - I always felt the word "love" was hollow, an empty threat of compassion. Many of the least favorite people in my life had loved me - and expressed so in very creative ways.</p>

<p>But i think love makes a lot more sense, when paired with cherish. If love is the theory, cherish is the action. Of course you love your wife, your kids, your close friends; you would do anything for them, and maybe you already do. But love without cherishment is a campfire with no warmth.</p>

<p>Ironically, A great way to cherish is also to listen.</p>

<h2>Commitment</h2>

<p>I have a lot of goals, interests, ideas, todos, projects. I think a lot of us do. I've naturally accumulated them over the years in varying forms. Many I made progress on, and many more I did not.</p>

<p>But commitments. What do I have of those? I have a lease, which is a form of commitment, and a few other contracts and agreements.</p>

<p>But personally? What are mine? What have they ever been? It's not a word thats been in my vernacular, as a descriptor for a given interest, project, or idea. I've had many <a href="http://paidtoexist.com/go-all-out/">interests</a>, but no commitments.</p>

<p>What does it mean to be committed? It means accepting a fundamental change to who you are - changing your DNA as a person, flamboyantly. You have a mission and everything about you is geared towards it. The answer to every distraction becomes "I have a commitment".</p>

<p>People who are interested join the army reserves.
People who are committed join the army.</p>

<p><a rel="bookmark" href="http://meesterdude.github.com/entries/3-words-that-changed-me/">&infin; Permalink</a></p>



]]></content>
    </entry>
  
    <entry>
      




<title type="html"><![CDATA[Selective Soldiering]]></title>
<link href="http://meesterdude.github.com/entries/selective-soldiering/"/>
<updated>2016-10-29T17:20:00-04:00</updated>
<id>http://meesterdude.github.com/entries/selective-soldiering</id>

      <content type="html"><![CDATA[<!--more-->


<p><a rel="bookmark" href="http://meesterdude.github.com/entries/selective-soldiering/">&infin; Permalink</a></p>



]]></content>
    </entry>
  
    <entry>
      




<title type="html"><![CDATA[make boring things fun]]></title>
<link href="http://meesterdude.github.com/entries/make-boring-things-fun/"/>
<updated>2016-02-11T17:49:00-05:00</updated>
<id>http://meesterdude.github.com/entries/make-boring-things-fun</id>

      <content type="html"><![CDATA[<!--more-->


<p><a rel="bookmark" href="http://meesterdude.github.com/entries/make-boring-things-fun/">&infin; Permalink</a></p>



]]></content>
    </entry>
  
    <entry>
      




<title type="html"><![CDATA[Upgrading rails to use strong_params automatically]]></title>
<link href="http://meesterdude.github.com/entries/upgrading-rails-to-use-strong-params-automatically/"/>
<updated>2015-11-30T08:15:00-05:00</updated>
<id>http://meesterdude.github.com/entries/upgrading-rails-to-use-strong-params-automatically</id>

      <content type="html"><![CDATA[<p>If you need to upgrade a rails app to rely on strong_params, getting all the attributes sorted out can be tedious and painful. But here I'll share with you a method that you can use to have most of the work done automatically. All you have to do is exercise your site, or have your test suite do it.</p>

<!--more-->


<h2>Installation</h2>

<p>Put the code (below) in <code>ApplicationController</code> and set a before_filter like <code>before_filter :install_strong_params, only: [:create, :update]</code>.</p>

<p>This code, when temporarily used within your project, will rewrite your controllers to use strong_params. It is not intelligent, and you may find you need to tweak the code or its output for it to work for your codebase; but it should carry you most of the way at least.</p>

<p>If you need to debug, uncomment the line that adds a params comment to the bottom of the controller.</p>

<p>Once your app has been upgraded, you should remove the code.</p>

<h2>Assumptions</h2>

<ul>
<li>a blank line preceeding the last line the controller, which should be an 'end' (typical for most apps)</li>
<li>existing create/update code is written using the symbol (params[:user] vs params['user'])</li>
<li>the first hash value found among the params is the one to use for strong_params (typical for most rails apps)</li>
<li>the params being submitted represent everything that should be allowed (not always the case with specs)</li>
</ul>


<h2>The Code</h2>

<p>```
 def install_strong_params</p>

<pre><code>path = self.class.instance_methods(false).map { |m| self.class.instance_method(m).source_location.first}.uniq.first
lines = File.open(path).read.lines
name, hash = params.detect{|k,v| v.is_a?(Hash) }
return true if hash.nil?
return true if lines.detect{|l| l.include?("#{name}_params")} # abort if already replaced
has_private = lines.detect{|l| l.include?('  private')}
# insert method defition at second to last line
lines[-2] = %Q^#{"  private \n\n" if !has_private}  def #{name}_params
params.require(:#{name}).permit(#{hash.keys.collect(&amp;:to_sym).to_s[1..-2]})
</code></pre>

<p>  end\n\n^</p>

<pre><code># lines[-1] = "end\n\n# #{params}" # uncomment to write params as comment at bottom of controller
lines.each_with_index do |l,i|
  lines[i] = l.gsub("params[:#{name}]", "#{name}_params") if l.include?("params[:#{name}]")
end
File.open(path, 'w+') { |file| file.write(lines.join) }
</code></pre>

<p>  end
```</p>

<p><a rel="bookmark" href="http://meesterdude.github.com/entries/upgrading-rails-to-use-strong-params-automatically/">&infin; Permalink</a></p>



]]></content>
    </entry>
  
</feed>

