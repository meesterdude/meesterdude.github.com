<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: feed | RuRu]]></title>
  <link href="http://meesterdude.github.com/categories/feed/atom.xml" rel="self"/>
  <link href="http://meesterdude.github.com/"/>
  <updated>2018-02-07T14:43:59-05:00</updated>
  <id>http://meesterdude.github.com/</id>
  <author>
    <name><![CDATA[Russell Jennings]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
    <entry>
      




<title type="html"><![CDATA[Google keeps its talent where it can see them]]></title>
<link href="http://meesterdude.github.com/entries/google-keeps-its-talent-where-it-can-see-them/"/>
<updated>2018-02-07T14:27:00-05:00</updated>
<id>http://meesterdude.github.com/entries/google-keeps-its-talent-where-it-can-see-them</id>

      <content type="html"><![CDATA[<!--more-->


<p><blockquote><p>Google has said that it has tested the productivity of remote teams and on-site teams and found no difference in performance.</p><footer><strong>zdnet.com</strong> <cite><a href='http://www.zdnet.com/article/no-telecommuting-allowed-why-is-google-investing-billions-of-dollars-in-office-buildings/'>www.zdnet.com/article/&hellip;</a></cite></footer></blockquote></p>

<p>This deserves to be highlighted, as many companies hesitate to embrace remote work out of fear it will impact performance. Even if its a 1:1 for google, it makes a huge impact on the quality of life its workers experience.</p>

<p><blockquote><p>Google doesn't want its engineers in local coffee shops hooking up with others from other companies and plotting a Google-killer. The more it can keep its people company men and company women -- the better.</p><footer><strong>zdnet.com</strong> <cite><a href='http://www.zdnet.com/article/no-telecommuting-allowed-why-is-google-investing-billions-of-dollars-in-office-buildings/'>www.zdnet.com/article/&hellip;</a></cite></footer></blockquote></p>

<p>The better for stockholders of Google.</p>

<p><a rel="bookmark" href="http://meesterdude.github.com/entries/google-keeps-its-talent-where-it-can-see-them/">&infin; Permalink</a></p>



]]></content>
    </entry>
  
    <entry>
      




<title type="html"><![CDATA[The most undervalued indicator for hiring great developers]]></title>
<link href="http://meesterdude.github.com/entries/the-most-undervalued-indicator-for-hiring-great-developers/"/>
<updated>2018-02-07T06:58:00-05:00</updated>
<id>http://meesterdude.github.com/entries/the-most-undervalued-indicator-for-hiring-great-developers</id>

      <content type="html"><![CDATA[<p>Hiring developers is a tough problem, and there are lots of efforts to try and measure the skill set of a candidate, but most are either entirely faulty or only paint a partial picture.</p>

<p>But there is one indicator you can use that tells you close to everything you need to know about a candidate, an indicator that most shops overlook when evaluating applicants...</p>

<!--more-->


<h1>The Best Indicator is Open Source</h1>

<h2>It means working in the open</h2>

<p>All the code written is available to see - what the developer did or did not do. The mistakes they made, they fix they applied, it's all out there to be seen by all.</p>

<h2>It means collaborating with others</h2>

<p>Either reviewing and accepting PR's or submitting them to other projects - you can gain insight to how a developer gives or responds to feedback, what they are like to disagree with or brainstorm with, and how they keep the ball rolling for work that may stall.</p>

<h2>It demonstrates engineering</h2>

<p>It means they are intimately involved in a problem space, and are working close with the tooling or technology that they see where it can be better. Or if it's an entirely new project, it shows their ability to identify a problem and properly engineer and package a solution.</p>

<h2>It reveals planning &amp; organization</h2>

<p>What features did they implement and which ones did they skip? Are github issues being managed, are PRs being reviewed? Is there any kind of documentation? is the code easy enough to reason about? these are all questions you can get insight into when looking over the Open Source work of a developer.</p>

<h2>It means they're part of the community</h2>

<p>They are giving back in some way, having benefited from the works of other open source projects, they now seek to contribute back their own effort. But it also means playing a part in a larger dialog of technology, features and tooling. It means they're able and willing to share their efforts with others and take the time to make their work available for the community. A small gesture, but one that involves a significant amount of work.</p>

<p>If you're looking to hire developers, take a closer look at what their open source contributions reveal about who they are and how they work.</p>

<p><a rel="bookmark" href="http://meesterdude.github.com/entries/the-most-undervalued-indicator-for-hiring-great-developers/">&infin; Permalink</a></p>



]]></content>
    </entry>
  
    <entry>
      




<title type="html"><![CDATA[Ruby on Rails meets the definition of a silver bullet]]></title>
<link href="http://meesterdude.github.com/entries/rails-meets-the-definition-of-a-silver-bullet/"/>
<updated>2018-02-06T04:23:00-05:00</updated>
<id>http://meesterdude.github.com/entries/rails-meets-the-definition-of-a-silver-bullet</id>

      <content type="html"><![CDATA[<p><blockquote><p>Silver Bullet<br/>Something that provides an immediate and extremely effective solution to a given problem or difficulty, especially one that is normally very complex or hard to resolve.</p><footer><strong>thefreedictionary.com</strong> <cite><a href='https://idioms.thefreedictionary.com/silver+bullet'>idioms.thefreedictionary.com/&hellip;</a></cite></footer></blockquote></p>

<!--more-->


<h4>This post is indirectly a response to <a href="http://blog.bloomca.me/2018/02/04/spa-is-not-silver-bullet.html">SPA is not a silver bullet</a></h4>

<p>Delivering applications to users has always been tough, especially if you try to keep them up to date with changes and improvements. Advances in the web allows companies to deliver the latest version of their software directly to users. It's allowed for the creation of countless E-stores, games, and desktop publishing software. But even still, it is not without it's complexities. There are ever evolving issues of complexity, maintainability, &amp; security to account for; in addition to feature development and staying nimble.</p>

<p>Before Ruby on Rails, there was coldfusion, custom PHP incarnations, VB.net, java and all other manner of crazy. I remember One of the first codebases I saw; a custom PHP app a fellow student in highschool had created for our AV club. I still remember the hardcoded SQL calls, complete with hardcoded credentials, embedded throughout the pages. Oh, how far we have come!</p>

<p>Sure, these solutions all render out a web page - one of the great levelers of the web - but working on them was often nightmarish. There were no tests, no staging environments, all development was done on the server and backups were a file copy. Naturally, these codebases decayed and became neglected but still used; We've all seen the horrendously outdated sites we sometimes need to use when interacting with the government.</p>

<p>As an industry we've identified a lot of best practices to help a codebase to be maintainable. Patterns that appear over and over again, or best practices procedurally.</p>

<p>Users have also come to expect native applications for their platforms as well, which can mean feature development takes 3 times as long to complete if you have custom codebases for each platform.</p>

<p>And lastly, productivity and effectiveness matter. Squashing bugs and creating new features needs to keep happening when you're business is software or runs on it.</p>

<h2>Rails is good for all of that</h2>

<p>Rails makes developing web applications faster and maintainable. It places emphasis on developer happiness, and using tools &amp; solutions that enable effective feature development. Once you have the environment setup, going from nothing to a web application you can actually start using functionally can be done with a couple of command line incarnations if your needs are CRUD based (most are!). Additional libraries (gems) let you further expand your app behavior, and equally you can roll your own solutions when called for.</p>

<p>It's also not afraid to break things for the sake of improvement. Backwards compatibility matters for some frameworks, but in the evolving web it's best to stay with what's current, secure or performant as browsers and technology evolve. This attitude is also what makes Rails secure: doing the "secure" thing is the default behavior, updates regularly include bugfixes or advisors to be aware of. Rails also request forgery protection, SQL sanitation, File upload and more right out of the box. An important caveat here is that updates often require (or at least encourage) changing your codebase is at each update - but that's the trade off you make to keep up with best practices.</p>

<p>But perhaps importantly to the point of this post, is that Rails lets a small team ship web and native experiences to all major desktop and mobile platforms, reusing most of the code that's already been written. By wrapping webviews in native navigation and using caching (also provided by Rails) you can create a seamless user experience - free of weird interface delays or screen flashes; while still doing most of your feature development in the Rails stack and instantly delivering updates to users for all platforms. Rails lets you optimize your app to create fast response times - as fast as 20ms (the fastest i've seen in production)</p>

<p>Rails is also quite flexible, featuring a set of very well thought opinions, but always have the option to do things differently. And if you need to start building out an API, or doing realtime websockets, or delivering more javascript-rich experiences, or scale up to support a lot of users; Rails can happily oblige.</p>

<h2>Can Rails scale? Shopify handles over 80,000 requests per second riding on Rails</h2>

<p>And those well thought out opinions, those sane defaults that Rails ships with? Makes for some highly maintainable codebases. Everything has a place, everyone knows and agrees (generally) where those places are and are not, and breaking the rules is easy unless it's ill-advised (like strong parameter protections). Even code that you wrote years ago can still make sense - no small feat!</p>

<p>For Ruby on Rails to facilitate teams of all sizes such speedy delivery of tested &amp; responsive applications across all major web/mobile/desktop platforms, makes it the silver bullet framework of development if there ever was one. The productivity, effectiveness and maintainability it enables remains unmatched in other development solutions in software.</p>

<h3>Looking for help building out your application in Ruby on Rails? <a href="http://linkedin.com/in/russjennings7/">Lets Work Together</a></h3>

<p><a rel="bookmark" href="http://meesterdude.github.com/entries/rails-meets-the-definition-of-a-silver-bullet/">&infin; Permalink</a></p>



]]></content>
    </entry>
  
    <entry>
      




<title type="html"><![CDATA[Introducing WillYou DidYou &rarr;]]></title>
<link href="/entries/introducing-willyou-didyou/"/>
<updated>2017-05-04T17:21:00-04:00</updated>
<id>http://meesterdude.github.com/entries/introducing-willyou-didyou</id>

      <content type="html"><![CDATA[<p>My latest project, two accountabilabuddies to help you achieve your goals. Add your Email address to the list!</p>

<!--more-->


<p><a rel="bookmark" href="http://meesterdude.github.com/entries/introducing-willyou-didyou/">&infin; Permalink</a></p>


<p><a rel="post-link" href="http://willyoudidyou.com">-> Link <-</a></p>

]]></content>
    </entry>
  
    <entry>
      




<title type="html"><![CDATA[3 words that changed me]]></title>
<link href="http://meesterdude.github.com/entries/3-words-that-changed-me/"/>
<updated>2017-03-21T00:22:00-04:00</updated>
<id>http://meesterdude.github.com/entries/3-words-that-changed-me</id>

      <content type="html"><![CDATA[<p>Words I've known, but did not understand or truly appreciate.</p>

<!--more-->


<p>It's not every day that a single, common word can change who you are. At least I imagine it isn't - I admit there might be people out there who see a word like "insulator" and become sheep herders - but I don't think this is such a case.</p>

<h2>Listen</h2>

<p>What does it mean, to listen? the absence of my mouth not moving? that's a simple enough definition, and the one I had for a while. But when you dive deeper, it's more than that.</p>

<p>To listen is to be quiet - verbally, and in mind. You can't listen when you're being strategic in your head about how to prove the other person wrong.</p>

<p>To listen is to be intently curious and unbiased in what you see - no matter how much you agree or disagree. The desire to understand outweighs the desire to judge. When you have a question, it's to know more, not to allude or infer.</p>

<p>And the best listeners are not tea cups you fill up with information - but mirrors that reflect what they observe - offering room for dispute on the facts, allowing them to better understand the other party.</p>

<h2>Cherish</h2>

<p>Growing up, I never understood a particular word that gets thrown around quite a lot in daily life. Certainly a function of my upbringing and experiences - I always felt the word "love" was hollow, an empty threat of compassion. Many of the least favorite people in my life had loved me - and expressed so in very creative ways.</p>

<p>But i think love makes a lot more sense, when paired with cherish. If love is the theory, cherish is the action. Of course you love your wife, your kids, your close friends; you would do anything for them, and maybe you already do. But love without cherishment is a campfire with no warmth.</p>

<p>Ironically, A great way to cherish is also to listen.</p>

<h2>Commitment</h2>

<p>I have a lot of goals, interests, ideas, todos, projects. I think a lot of us do. I've naturally accumulated them over the years in varying forms. Many I made progress on, and many more I did not.</p>

<p>But commitments. What do I have of those? I have a lease, which is a form of commitment, and a few other contracts and agreements.</p>

<p>But personally? What are mine? What have they ever been? It's not a word thats been in my vernacular, as a descriptor for a given interest, project, or idea. I've had many <a href="http://paidtoexist.com/go-all-out/">interests</a>, but no commitments.</p>

<p>What does it mean to be committed? It means accepting a fundamental change to who you are - changing your DNA as a person, flamboyantly. You have a mission and everything about you is geared towards it. The answer to every distraction becomes "I have a commitment".</p>

<p>People who are interested join the army reserves.
People who are committed join the army.</p>

<p><a rel="bookmark" href="http://meesterdude.github.com/entries/3-words-that-changed-me/">&infin; Permalink</a></p>



]]></content>
    </entry>
  
</feed>

